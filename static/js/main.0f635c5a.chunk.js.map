{"version":3,"sources":["Phonebook/Form/Form.module.css","Phonebook/ContactList/ContactList.module.css","Phonebook/Filter/Filter.module.css","Phonebook/Phonebook.module.css","redux/contacts-selectors.js","services/contactsApi.js","redux/contacts-operations.js","Phonebook/Form/Form.jsx","redux/contacts-actions.js","Phonebook/ContactList/ContactList.jsx","Phonebook/Filter/Filter.jsx","Phonebook/Phonebook.jsx","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","getItems","items","getError","error","getIsLoading","isLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContacts","a","axios","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","message","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","handleSubmit","preventDefault","undefined","find","item","alert","reset","className","style","mainForm","onSubmit","labelForm","inputForm","type","pattern","title","required","onChange","buttonForm","createAction","changeFilter","ContactList","contactsActions","length","map","contactListItem","btnDeleteContact","onClick","onClickDeleteContact","numberPhone","Filter","filterContainer","labelFilter","inputFilter","target","Phonebook","errorState","useEffect","mainSection","containerContacts","color","height","width","App","createReducer","fulfilled","payload","pending","rejected","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f635c5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__2XBn9\",\"labelForm\":\"Form_labelForm__3En0u\",\"inputForm\":\"Form_inputForm__1VpvJ\",\"buttonForm\":\"Form_buttonForm__3Hjru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactList_btnDeleteContact__d8lAi\",\"contactListItem\":\"ContactList_contactListItem__1FLwl\",\"numberPhone\":\"ContactList_numberPhone__2km8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2W2ob\",\"labelFilter\":\"Filter_labelFilter__1Gzq6\",\"inputFilter\":\"Filter_inputFilter__3YfzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"Phonebook_mainSection__p79Gk\",\"containerContacts\":\"Phonebook_containerContacts__1GZmD\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilter = (state) => state.contacts.filter;\nexport const getItems = (state) => state.contacts.items;\nexport const getError = (state) => state.contacts.error;\nexport const getIsLoading = (state) => state.contacts.isLoading;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://616da773a83a850017caa66f.mockapi.io/contacts\";\n\nexport async function fetchContacts() {\n  const { data } = await axios(\"\");\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(\"\", contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/${id}`);\n  return data;\n}\n","//createAsyncThunk\n\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as contactsApi from \"services/contactsApi\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.addContact(contact);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.deleteContact(id);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// //Асинхронный редакс.\n\n// import * as contactsApi from \"services/contactsApi\";\n// import contactsActions from \"redux/contacts-actions\";\n\n// export const fetchContacts = () => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const contacts = await contactsApi.fetchContacts();\n//     dispatch(contactsActions.fetchContactsOfFirstLoad(contacts));\n//     dispatch(contactsActions.fetchContactsSuccess());\n//     return contacts;\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError());\n//     return [];\n//   }\n// };\n\n// export const addContact = (contact) => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const response = await contactsApi.addContact(contact);\n//     dispatch(contactsActions.addContact(response));\n//     dispatch(contactsActions.fetchContactsSuccess());\n//     return response;\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError());\n//   }\n// };\n\n// export const deleteContact = (id) => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const response = await contactsApi.deleteContact(id);\n//     dispatch(contactsActions.fetchContactsSuccess());\n//     return response;\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError());\n//   }\n// };\n\n// createAsyncThunk\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport style from \"Phonebook/Form/Form.module.css\";\r\nimport { getItems } from \"redux/contacts-selectors\";\r\nimport { addContact } from \"redux/contacts-operations\";\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkedDuplicate = () => {\r\n    return items.find((item) => item.name.toLowerCase() === name.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (checkedDuplicate() !== undefined) {\r\n      alert(`${name} is alreade in contacts.`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContact(contact));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.mainForm} onSubmit={handleSubmit}>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Name\r\n      </label>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Number\r\n      </label>\r\n      <button className={style.buttonForm} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","//createAsyncThunk\n\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/addContact\");\nconst deleteContact = createAction(\"contacts/deleteContact\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContact,\n  deleteContact,\n  changeFilter,\n};\n\n// //Асинхронный редакс.\n// import { createAction } from \"@reduxjs/toolkit\";\n\n// const addContact = createAction(\"contacts/addContact\");\n// const deleteContact = createAction(\"contacts/deleteContact\");\n// const changeFilter = createAction(\"contacts/changeFilter\");\n// const fetchContactsOfFirstLoad = createAction(\"contacts/fetchContactsRequest\");\n// const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\n// const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\n// const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\n// export default {\n//   fetchContactsOfFirstLoad,\n//   fetchContactsRequest,\n//   fetchContactsSuccess,\n//   fetchContactsError,\n//   addContact,\n//   deleteContact,\n//   changeFilter,\n// };\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nimport contactsActions from \"redux/contacts-actions\";\r\nimport style from \"Phonebook/ContactList/ContactList.module.css\";\r\nimport { getVisibleContacts } from \"redux/contacts-selectors\";\r\nimport { deleteContact } from \"redux/contacts-operations\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getVisibleContacts);\r\n\r\n  async function onClickDeleteContact(id) {\r\n    const statusDelete = await dispatch(deleteContact(id));\r\n    if (statusDelete.type === \"contacts/deleteContact/fulfilled\") {\r\n      dispatch(contactsActions.deleteContact(id));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {items.length > 0 &&\r\n        items.map((item) => (\r\n          <li key={item.id} className={style.contactListItem}>\r\n            <button\r\n              className={style.btnDeleteContact}\r\n              type=\"button\"\r\n              onClick={() => onClickDeleteContact(item.id)}\r\n            >\r\n              delete\r\n            </button>\r\n            {item.name}:{\" \"}\r\n            <span className={style.numberPhone}>{item.number}</span>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport style from \"Phonebook/Filter/Filter.module.css\";\r\nimport contactsActions from \"redux/contacts-actions\";\r\nimport { getFilter } from \"redux/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <div className={style.filterContainer}>\r\n      <label className={style.labelFilter}>\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={(e) =>\r\n            dispatch(contactsActions.changeFilter(e.target.value))\r\n          }\r\n        />\r\n        Find contacts by name\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Form from \"./Form\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport style from \"./Phonebook.module.css\";\r\nimport { getError, getIsLoading } from \"../redux/contacts-selectors\";\r\nimport { fetchContacts } from \"redux/contacts-operations\";\r\nimport Loading from \"react-loader-spinner\";\r\n\r\nexport default function Phonebook() {\r\n  const dispatch = useDispatch();\r\n  const errorState = useSelector(getError);\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  useEffect(() => {\r\n    errorState && alert(errorState);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, []);\r\n\r\n  return (\r\n    <section className={style.mainSection}>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n\r\n      <div className={style.containerContacts}>\r\n        <h2>Contacts:</h2>\r\n        <Filter />\r\n        {isLoading && (\r\n          <Loading type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} />\r\n        )}\r\n        <ContactList />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Phonebook from \"Phonebook\";\n\nexport default function App() {\n  return <Phonebook />;\n}\n","// createAsyncThunk\n\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport contactsActions from \"redux/contacts-actions\";\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from \"redux/contacts-operations\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, { payload }) => payload,\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n\n//Асинхронный редакс.\n\n// import { combineReducers } from \"redux\";\n// import { createReducer } from \"@reduxjs/toolkit\";\n\n// import contactsActions from \"redux/contacts-actions\";\n\n// const items = createReducer([], {\n//   [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n//   [contactsActions.fetchContactsOfFirstLoad]: (_, { payload }) => payload,\n//   [contactsActions.deleteContact]: (state, { payload }) =>\n//     state.filter((contact) => contact.id !== payload),\n// });\n\n// const filter = createReducer(\"\", {\n//   [contactsActions.changeFilter]: (_, { payload }) => payload,\n// });\n\n// const isLoading = createReducer(false, {\n//   [contactsActions.fetchContactsRequest]: () => true,\n//   [contactsActions.fetchContactsSuccess]: () => false,\n//   [contactsActions.fetchContactsError]: () => false,\n// });\n\n// const error = createReducer(null, {\n//   [contactsActions.fetchContactsError]: (_, { payload }) => payload,\n//   [contactsActions.fetchContactsRequest]: () => null,\n// });\n\n// export default combineReducers({\n//   items,\n//   filter,\n//   isLoading,\n//   error,\n// });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"redux/contacts-reducer\";\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"App\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}