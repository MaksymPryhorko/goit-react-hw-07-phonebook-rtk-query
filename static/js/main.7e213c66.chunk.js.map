{"version":3,"sources":["Phonebook/ContactListItem/ContactListItem.module.css","Phonebook/Filter/Filter.module.css","Phonebook/Phonebook.module.css","redux/contacts-rtkq.js","Phonebook/Form/Form.jsx","Phonebook/ContactListItem/ContactListItem.jsx","redux/contacts-selectors.js","Phonebook/ContactList/ContactList.jsx","redux/contacts-actions.js","Phonebook/Filter/Filter.jsx","Phonebook/Phonebook.jsx","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Phonebook/Form/Form.module.css"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","Form","contacts","useState","name","setName","number","setNumber","isLoading","error","useEffect","Notify","failure","status","handleChange","e","currentTarget","value","handleSubmit","a","preventDefault","undefined","find","contact","toLowerCase","alert","reset","className","style","mainForm","onSubmit","labelForm","inputForm","type","pattern","title","required","onChange","buttonForm","disabled","ContactListItem","id","isDeleting","contactListcontact","btnDeleteContact","onClick","numberPhone","getFilter","state","filter","ContactList","data","visibleContacts","normalizedFilter","includes","getVisibleContacts","useSelector","length","map","changeFilter","createAction","Filter","dispatch","useDispatch","filterContainer","labelFilter","inputFilter","contactsActions","target","Phonebook","isFetching","mainSection","containerContacts","color","height","width","App","createReducer","_","payload","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e213c66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactListItem_btnDeleteContact__2g6mn\",\"contactListItem\":\"ContactListItem_contactListItem__2HTHK\",\"numberPhone\":\"ContactListItem_numberPhone__22rGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2W2ob\",\"labelFilter\":\"Filter_labelFilter__1Gzq6\",\"inputFilter\":\"Filter_inputFilter__3YfzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"Phonebook_mainSection__p79Gk\",\"containerContacts\":\"Phonebook_containerContacts__1GZmD\",\"error\":\"Phonebook_error__2vkKl\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contacts\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://616da773a83a850017caa66f.mockapi.io/contacts\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (newContact) => ({\r\n        url: \"\",\r\n        method: \"POST\",\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAddContactMutation } from \"redux/contacts-rtkq\";\r\nimport { Notify } from \"notiflix\";\r\n\r\nimport style from \"Phonebook/Form/Form.module.css\";\r\n\r\nexport default function Form({ contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [addContact, { isLoading, error }] = useAddContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      Notify.failure(`Error: ${error.status}`);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkedDuplicate = () => {\r\n    return contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (checkedDuplicate() !== undefined) {\r\n      alert(`${name} is alreade in contacts.`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    addContact(contact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.mainForm} onSubmit={handleSubmit}>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Name\r\n      </label>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Number\r\n      </label>\r\n      <button className={style.buttonForm} disabled={isLoading} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useDeleteContactMutation } from \"redux/contacts-rtkq\";\r\nimport { useEffect } from \"react\";\r\nimport { Notify } from \"notiflix\";\r\n\r\nimport style from \"Phonebook/ContactListItem/ContactListItem.module.css\";\r\n\r\nexport default function ContactListItem({ id, name, number }) {\r\n  const [deleteContact, { isLoading: isDeleting, error }] =\r\n    useDeleteContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      Notify.failure(`Error: ${error.status}`);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <li key={id} className={style.contactListcontact}>\r\n      <button\r\n        className={style.btnDeleteContact}\r\n        type=\"button\"\r\n        disabled={isDeleting}\r\n        onClick={() => deleteContact(id)}\r\n      >\r\n        {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n      </button>\r\n      {name}: <span className={style.numberPhone}>{number}</span>\r\n    </li>\r\n  );\r\n}\r\n","export const getFilter = (state) => state.filter;\n\nexport const getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import ContactListItem from \"Phonebook/ContactListItem\";\r\nimport { getVisibleContacts, getFilter } from \"redux/contacts-selectors\";\r\nimport { useFetchContactsQuery } from \"redux/contacts-rtkq\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function ContactList() {\r\n  const { data: contacts } = useFetchContactsQuery(\"\");\r\n  const filter = useSelector(getFilter);\r\n  const visibleContacts = getVisibleContacts(contacts, filter);\r\n\r\n  return (\r\n    <ul>\r\n      {visibleContacts.length > 0 &&\r\n        contacts.map((contact) => (\r\n          <ContactListItem key={contact.id} {...contact} />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { changeFilter };\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport style from \"Phonebook/Filter/Filter.module.css\";\r\nimport contactsActions from \"redux/contacts-actions\";\r\nimport { getFilter } from \"redux/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <div className={style.filterContainer}>\r\n      <label className={style.labelFilter}>\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={(e) =>\r\n            dispatch(contactsActions.changeFilter(e.target.value))\r\n          }\r\n        />\r\n        Find contacts by name\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useFetchContactsQuery } from \"redux/contacts-rtkq\";\r\nimport { useEffect } from \"react\";\r\nimport { Notify } from \"notiflix\";\r\n\r\nimport Form from \"./Form\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport style from \"./Phonebook.module.css\";\r\nimport Loading from \"react-loader-spinner\";\r\n\r\nexport default function Phonebook() {\r\n  const { data, error, isFetching } = useFetchContactsQuery(\"\");\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      Notify.failure(`Error: ${error.status} ${error.data}`);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <section className={style.mainSection}>\r\n      <h1>Phonebook</h1>\r\n      {data && <Form contacts={data} />}\r\n\r\n      <div className={style.containerContacts}>\r\n        <h2>Contacts:</h2>\r\n        <Filter />\r\n        {isFetching && (\r\n          <Loading type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} />\r\n        )}\r\n        {data && <ContactList />}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Phonebook from \"Phonebook\";\n\nexport default function App() {\n  return <Phonebook />;\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\n\nimport contactsActions from \"redux/contacts-actions\";\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"redux/contacts-reducer\";\nimport { contactsApi } from \"redux/contacts-rtkq\";\n\nconst store = configureStore({\n  reducer: {\n    filter: contactsReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"App\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__2XBn9\",\"labelForm\":\"Form_labelForm__3En0u\",\"inputForm\":\"Form_inputForm__1VpvJ\",\"buttonForm\":\"Form_buttonForm__3Hjru\"};"],"sourceRoot":""}